@namespace SpeedPainters.UI

@if (PackageData is null)
{
    return;
}

<root class="@(VotedForMap() ? "selected" : "")" style="background-image: url(@PackageData.Thumb)" @onclick=@VoteMap>
    <div style="align-items: center;">
        @if (!string.IsNullOrEmpty(PackageData.Org.Thumb))
        {
            <div class="org" style="background-image: url(@PackageData.Org.Thumb)" />
        }
        <label style="font-size: 45px;">@PackageData.Org.Title</label>
    </div>
    <label style="font-size: 45px;">@PackageData.Title</label>
</root>

@code {
    public string Ident { get; set; }
    public Package PackageData { get; private set; }

    private bool VotedForMap()
    {
        if (MapVoteState.Instance is null || !MapVoteState.Instance.Votes.ContainsKey(Game.LocalClient))
            return false;

        return MapVoteState.Instance.Votes[Game.LocalClient] == Ident;
    }

    protected override async Task OnParametersSetAsync()
    {
        var package = await Package.Fetch(Ident, true);
        if (package is null || package.PackageType != Package.Type.Map)
        {
            Delete();
            return;
        }

        PackageData = package;
        StateHasChanged();
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(VotedForMap());
    }
}

<style>
    MapIcon {
        aspect-ratio: 1;
        width: 30%;
        height: 100%;
        transform: scale(1.0);
        cursor: pointer;
        justify-content: space-between;
        flex-direction: column;
        box-shadow: 3px 3px 10px black;
        background-repeat: no-repeat;
        background-size: contain;

        label {
            color: white;
            font-family: Poppins;
            text-shadow: 2px 2px 0px black;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .org {
            width: 40px;
            height: 40px;
            background-color: black;
            background-repeat: no-repeat;
            background-size: contain;
            flex-shrink: 0;
            margin: 5px;
        }

        &:hover {
            transform: scale(1.02);
        }

        &:active {
            transform: scale(1.0);
        }

        &.selected {
            border-width: 10px;
            border-color: orange;
        }
    }
</style>