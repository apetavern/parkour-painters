@namespace ParkourPainters.UI

@if (!Hud.DisplayedPlayer.IsValid())
{
    return;
}

<root>
    @foreach (var item in Hud.DisplayedPlayer.Inventory.Items)
    {
        <div class="carriable @(Hud.DisplayedPlayer.LastEquippedItem is not null && Hud.DisplayedPlayer.LastEquippedItem == item ? "active" : "")">
            <label class="slot">@item.SlotText</label>
            <label style="padding-right: 5px;">@item.CarriableName</label>
            <label>(@(Hud.DisplayedPlayer.Inventory.Items.IndexOf(item) + 1))</label>
        </div>
    }
</root>

@code {
    protected override int BuildHash()
    {
        if (!Hud.DisplayedPlayer.IsValid())
            return 0;

        var player = Hud.DisplayedPlayer;
        return HashCode.Combine(player.Inventory.Items.HashCombine(i => HashCode.Combine(i.CarriableName.GetHashCode(), i.SlotText.GetHashCode())), player.LastEquippedItem?.GetHashCode());
    }
}

<style>
    Inventory {
        position: absolute;
        bottom: 100px;
        right: 200px;
        flex-direction: column;
        align-items: flex-end;

        .carriable {
            font-size: 70px;
            color: white;
            font-family: ADDCN;
            text-shadow: 2px 2px 0px black;
            align-items: center;
            transition: all 200ms ease-in-out;
            opacity: 0.3;

            .slot {
                color: orange;
                margin-right: 5px;
            }

            &.active {
                opacity: 1;
            }
        }
    }
</style>