@using System
@using Sandbox;
@using Sandbox.MenuSystem;
@using Sandbox.UI;
@namespace Sandbox.UI.GameMenu
@attribute [StyleSheet]

<root style="flex-direction: column;">

    <div @ref=Logo class="game-title">
    </div>

    <div class="controls">

        @if ( Game.InGame )
        {
            <a class="button" href="/active">Current Game</a>
            <a class="button" onclick=@LeaveGame>Leave Game</a>
            <span style="height: 20px;"></span>
        }
        else if (Game.Menu.Lobby != null)
        {
            <a class="button" href="/lobby">Return To Lobby</a>
            <span style="height: 20px;"></span>
        }
        else
        {
            <a class="button" onclick=@CreateNewLobby>Create Game</a>

            if (Game.Menu.Package.SupportsSavedGames && Game.Menu.SavedGames.Any())
            {
                <a class="button" onclick=@LoadSavedGame>Load Game</a>
            }
        }

        <a class="button" href="/servers">Find a Game</a>
        <a class="button" href="/settings">Settings</a>

        <span style="height: 20px;"></span>

        <a class="button" @onclick=@Game.Menu.Close>Quit</a>

    </div>

</root>

@code
{
    Panel Logo { get; set; }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if (!firstTime)
            return;

        var tex = Texture.Load(FileSystem.Mounted, "images/pp_logo.png");
        Logo.Style.SetBackgroundImage(tex);
    }

    void LoadSavedGame()
    {
        this.Navigate( "/load" );
    }

    async Task CreateNewLobby()
    {
        await Game.Menu.CreateLobbyAsync();
        // we will navigate to lobby when it's ready
    }

    void LeaveGame()
    {
        Game.Menu.LeaveServer("Leaving");
    }
}
