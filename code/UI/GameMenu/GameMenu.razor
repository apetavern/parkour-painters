@using System
@using Sandbox;
@using Sandbox.MenuSystem;
@using Sandbox.UI;
@attribute [StyleSheet]
@inherits Sandbox.UI.NavHostPanel
@implements Sandbox.Menu.IGameMenuPanel
@namespace ParkourPainters.UI.GameMenu

<root class="gamemainmenu">
    <div class="navigator-canvas" slot="navigator-canvas"></div>
    <img @ref=Logo class="logo" src="images/pp_logo_2048.png">
    <img @ref=VideoDisplay style="position: absolute; z-index: -10; width: 100%; height: 100%; filter: blur(22px); opacity: 0.55;">
</root>

@code
{
    private Image VideoDisplay { get; set; }
    private VideoPlayer BgVideo { get; set; }
    private Image Logo { get; set; }
    private bool _videoLoaded = false;

    public GameMenu()
    {
        DefaultUrl = "/";

        AddDestination("/", typeof(FrontPage));
        AddDestination("/load", typeof(LoadGamePage));
        AddDestination("/lobby", typeof(LobbyPage));
        AddDestination("/lobby/map", typeof(LobbyMapPage));
        AddDestination("/lobby/addons", typeof(LobbyAddonPage));
        AddDestination("/active", typeof(ActivePage));
        AddDestination("/active/map", typeof(ActiveMapPage));
        AddDestination("/servers", typeof(ServerListPage));
        AddDestination("/settings", typeof(SettingsPage));

        if (Game.InGame) Navigate("/active");

        BindClass( "ingame", () => Game.InGame );
        BindClass("inlobby", () => Game.Menu.Lobby != null);

        BgVideo = new VideoPlayer()
        {
            Repeat = true,
        };
        BgVideo.Play(FileSystem.Mounted, "videos/menu_loop.mp4");
    }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if(firstTime)
        {
            Logo.BindClass("enabled", () => CurrentPanel is FrontPage);
        }
    }

    public override void Tick()
    {
        VideoDisplay.Texture = BgVideo.Texture;
        BgVideo.Present();
    }

    protected override void OnEvent( PanelEvent e )
    {
        if ( e.Name == "package.changed" )
        {
            StateHasChanged();
            return;
        }

        base.OnEvent( e );
    }

    [GameEvent.Menu.ServerJoined]
    public void OnServerJoined() => Navigate("/active");

    [GameEvent.Menu.LobbyJoined]
    public void OnLobbyJoined() => Navigate("/lobby");

    [GameEvent.Menu.LobbyLeave]
    public void OnLobbyLeave() => Navigate("/");

    [GameEvent.Menu.ServerLeave]
    public void OnServerLeave() => Navigate("/");
}
