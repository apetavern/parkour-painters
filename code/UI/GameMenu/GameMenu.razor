@using System
@using Sandbox;
@using Sandbox.MenuSystem;
@using Sandbox.UI;
@attribute [StyleSheet]
@inherits Sandbox.UI.NavHostPanel
@implements Sandbox.Menu.IGameMenuPanel
@namespace Sandbox.UI.GameMenu

<root class="gamemainmenu">
    <div class="navigator-canvas" slot="navigator-canvas"></div>
</root>

@code
{
    public GameMenu()
    {
        DefaultUrl = "/";

        AddDestination("/", typeof(FrontPage));
        AddDestination("/load", typeof(LoadGamePage));
        AddDestination("/lobby", typeof(LobbyPage));
        AddDestination("/lobby/map", typeof(LobbyMapPage));
        AddDestination("/lobby/addons", typeof(LobbyAddonPage));
        AddDestination("/active", typeof(ActivePage));
        AddDestination("/active/map", typeof(ActiveMapPage));
        AddDestination("/servers", typeof(ServerListPage));
        AddDestination("/settings", typeof(SettingsPage));

        if (Game.InGame) Navigate("/active");

        BindClass( "ingame", () => Game.InGame );
        BindClass("inlobby", () => Game.Menu.Lobby != null);
    }

	protected override void OnEvent( PanelEvent e )
	{
		if ( e.Name == "package.changed" )
		{
			StateHasChanged();
			return;
		}

		base.OnEvent( e );
	}

    [GameEvent.Menu.ServerJoined]
    public void OnServerJoined() => Navigate("/active");

    [GameEvent.Menu.LobbyJoined]
    public void OnLobbyJoined() => Navigate("/lobby");

    [GameEvent.Menu.LobbyLeave]
    public void OnLobbyLeave() => Navigate("/");

    [GameEvent.Menu.ServerLeave]
    public void OnServerLeave() => Navigate("/");
}
