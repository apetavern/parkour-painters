@namespace ParkourPainters.UI

@if (Game.LocalPawn is not Entities.Player player)
{
    return;
}

<root>
    @* TODO: Show other abilities here. *@

    @* Dash is always available on the player *@
    <label
    @ref=DashIcon
    class="icon"
    style="color: linear-gradient(to top, orange @(GetDashPercentage(player))%, black 0%);">
        keyboard_double_arrow_up
    </label>
</root>

@code {
    private Label DashIcon { get; set; }

    @* Extremely hacky solution because linear-gradient fills up the icon completely before 100% is reached. *@
    private double GetDashPercentage(Entities.Player player)
    {
        return Math.Max(player.DashMechanic.ActiveDashPercentage - 20, 0);
    }

    public override void Tick()
    {
        if (Game.LocalPawn is not Entities.Player player)
            return;

        DashIcon.SetClass("active", player.DashMechanic.ActiveDashPercentage >= 100);
    }

    protected override int BuildHash()
    {
        var player = Game.LocalPawn as Entities.Player;
        if (player is null)
            return 0;

        return HashCode.Combine(player.DashMechanic.ActiveDashPercentage);
    }
}

<style>
    Abilities {
        position: absolute;
        bottom: 300px;
        right: 200px;
        transition: all 200ms ease-in-out;

        .icon {
            font-family: MaterialIcons;
            font-size: 150px;
            text-shadow: 2px 2px 0px black;

            &.active {
                animation-duration: 1s;
                animation-name: bob;
                animation-iteration-count: infinite;
            }
        }
    }

    @@keyframes bob {
        0% {
            transform: translateY(0);
        }

        50% {
            transform: translateY(5);
        }

        100% {
            transform: translateY(0);
        }
    }
</style>